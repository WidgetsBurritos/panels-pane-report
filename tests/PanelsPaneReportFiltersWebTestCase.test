<?php

/**
 * @file
 * Panels Pane Report Web Tests.
 */

/**
 * Web tests for the Panels Pane Report.
 *
 * @ingroup Panels Pane Report
 */
class PanelsPaneReportFiltersWebTestCase extends PanelsPaneReportWebTestBaseCase {
  protected $profile = 'testing';

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('Panels Panel Report Web Tests: Filters'),
      'description' => t('Test panels pane report filter functionality'),
      'group' => t('Panels Pane Report'),
    );
  }

  /**
   * Implements setUp().
   */
  public function setUp(array $modules = array()) {
    parent::setUp(array_merge($modules, array('panels_pane_report')));
  }

  /**
   * Test filter contains expected filter options.
   */
  public function testExpectedFilterOptions() {
    $row = array(
      'entity_type' => 'puppy',
      'pattern_storage_id' => 'k9',
      'page_storage_id' => 'yard1',
      'display_storage_type' => 'doghouse',
      'display_storage_id' => 'woofhouse9',
      'display_layout' => 'single',
      'build_mode' => 'retriever',
      'style_mode' => 'golden',
      'bundle' => 'litter',
    );
    PanelsPaneReport::reportItem($row);

    $admin_user = $this->drupalCreateUser(array(
      'access panels pane report',
    ));

    $this->drupalLogin($admin_user);

    $this->drupalGet('admin/reports/panels-pane-report');
    // True/false/null filters.
    $this->assertRaw('<option value="1">✔ True</option>');
    $this->assertRaw('<option value="0">✖ False</option>');
    $this->assertRaw('<option value="-1">∅ Null</option>');
  }

  /**
   * Reports one item of each status type.
   */
  private function reportOneItemOfEachStatusType() {
    $options = array(
      'k9' => NULL,
      'k10' => 1,
      'k11' => 0,
    );

    foreach ($options as $id => $status) {
      $row = array(
        'entity_type' => 'puppy',
        'pattern_storage_id' => $id,
        'pattern_status' => $status,
        'page_storage_id' => 'yard1',
        'page_status' => $status,
        'display_storage_type' => 'doghouse',
        'display_storage_id' => 'woofhouse9',
        'build_mode' => 'retriever',
        'style_mode' => 'golden',
        'bundle' => 'litter',
      );
      PanelsPaneReport::reportItem($row);
    }
  }

  /**
   * Tests true filter option.
   */
  public function testOnlyTruePageAndPatternStatusVisible() {
    self::reportOneItemOfEachStatusType();

    $admin_user = $this->drupalCreateUser(array(
      'access panels pane report',
    ));

    $this->drupalLogin($admin_user);
    $this->drupalGet('admin/reports/panels-pane-report', [
      'query' => [
        'pattern_status' => '1',
        'page_status' => '1',
      ],
    ]);

    $this->assertRaw('<span class="page-status">✔</span>');
    $this->assertRaw('<span class="pattern-status">✔</span>');
    $this->assertNoRaw('<span class="page-status"></span>');
    $this->assertNoRaw('<span class="pattern-status"></span>');
    $this->assertNoRaw('<span class="page-status">✖</span>');
    $this->assertNoRaw('<span class="pattern-status">✖</span>');
  }

  /**
   * Tests false filter option.
   */
  public function testOnlyFalsePageAndPatternStatusVisible() {
    self::reportOneItemOfEachStatusType();

    $admin_user = $this->drupalCreateUser(array(
      'access panels pane report',
    ));

    $this->drupalLogin($admin_user);
    $this->drupalGet('admin/reports/panels-pane-report', [
      'query' => [
        'pattern_status' => '0',
        'page_status' => '0',
      ],
    ]);

    $this->assertRaw('<span class="page-status">✖</span>');
    $this->assertRaw('<span class="pattern-status">✖</span>');
    $this->assertNoRaw('<span class="page-status"></span>');
    $this->assertNoRaw('<span class="pattern-status"></span>');
    $this->assertNoRaw('<span class="page-status">✔</span>');
    $this->assertNoRaw('<span class="pattern-status">✔</span>');
  }

  /**
   * Tests null filter option.
   */
  public function testOnlyNullPageAndPatternStatusVisible() {
    self::reportOneItemOfEachStatusType();

    $admin_user = $this->drupalCreateUser(array(
      'access panels pane report',
    ));

    $this->drupalLogin($admin_user);
    $this->drupalGet('admin/reports/panels-pane-report', [
      'query' => [
        'pattern_status' => '-1',
        'page_status' => '-1',
      ],
    ]);

    $this->assertRaw('<span class="page-status"></span>');
    $this->assertRaw('<span class="pattern-status"></span>');
    $this->assertNoRaw('<span class="page-status">✔</span>');
    $this->assertNoRaw('<span class="pattern-status">✔</span>');
    $this->assertNoRaw('<span class="page-status">✖</span>');
    $this->assertNoRaw('<span class="pattern-status">✖</span>');
  }

  /**
   * Tests null filter option.
   */
  public function testOnlyAllPageAndPatternStatusVisible() {
    self::reportOneItemOfEachStatusType();

    $admin_user = $this->drupalCreateUser(array(
      'access panels pane report',
    ));

    $this->drupalLogin($admin_user);
    $this->drupalGet('admin/reports/panels-pane-report');

    $this->assertRaw('<span class="page-status"></span>');
    $this->assertRaw('<span class="pattern-status"></span>');
    $this->assertRaw('<span class="page-status">✔</span>');
    $this->assertRaw('<span class="pattern-status">✔</span>');
    $this->assertRaw('<span class="page-status">✖</span>');
    $this->assertRaw('<span class="pattern-status">✖</span>');
  }

}
